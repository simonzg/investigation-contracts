/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { BalanceCalc, BalanceCalcInterface } from "../BalanceCalc";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "TokenEvent",
    type: "event",
  },
  {
    inputs: [],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "input",
        type: "uint256",
      },
    ],
    name: "divTotalShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_shares",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_totalShares",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_totalSupply",
        type: "uint256",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mulResult",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "newBalanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "shares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234610024576000805560006001556000600255610222908161002a8239f35b600080fdfe60806040818152600436101561001457600080fd5b600091823560e01c90816303314efa146101875750806318160ddd146101695780633a98ef391461014d578063425fbb681461012a5780634477cf7e14610109578063722713f7146100db5780638cd8db8a146100b25763b2daa4d01461007a57600080fd5b346100ae57816003193601126100ae576100a761009e6020936002549054906101cc565b600154906101a3565b9051908152f35b5080fd5b82346100d85760603660031901126100d857600435600255602435815560443560015580f35b80fd5b50346100ae57816003193601126100ae576100a7602092610101600254600154906101a3565b9054906101cc565b50346100ae5760203660031901126100ae576100a7602092546004356101cc565b50346100ae57816003193601126100ae576020906100a7600254600154906101a3565b50346100ae57816003193601126100ae57602091549051908152f35b50346100ae57816003193601126100ae576020906001549051908152f35b8390346100ae57816003193601126100ae576020906002548152f35b818102929181159184041417156101b657565b634e487b7160e01b600052601160045260246000fd5b81156101d6570490565b634e487b7160e01b600052601260045260246000fdfea26469706673582212201e42526b4a03133427506c8abbf8b0a28f58bf873b69f7afd4f74866c021471364736f6c63430008130033";

type BalanceCalcConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BalanceCalcConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BalanceCalc__factory extends ContractFactory {
  constructor(...args: BalanceCalcConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BalanceCalc> {
    return super.deploy(overrides || {}) as Promise<BalanceCalc>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BalanceCalc {
    return super.attach(address) as BalanceCalc;
  }
  override connect(signer: Signer): BalanceCalc__factory {
    return super.connect(signer) as BalanceCalc__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BalanceCalcInterface {
    return new utils.Interface(_abi) as BalanceCalcInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BalanceCalc {
    return new Contract(address, _abi, signerOrProvider) as BalanceCalc;
  }
}
